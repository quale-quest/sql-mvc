

<#

element(GalleryDataTopTitle)
    <p><b>{{table.Title}}</b></p>

element(GalleryDataWrap)
    <div class='qiui1gallery_wrap'>{{{head_html}}}{{{body_html}}}{{{foot_html}}}</div>

element(GalleryDataHead)
    $CRLF${{{pop}}}

element(GalleryDataHeadRecordWrap)
    {{{pop}}}

element(GalleryDataBodyRecordWrap)
    {{{pop}}}

element(GalleryDataFootRecordWrap)
    {{{pop}}}

element(GalleryDataHeadRow)
    

element(GalleryDataHeadFirstFieldCell)
    

element(GalleryDataHeadFieldCell)
    

element(GalleryDataBody)
    $CRLF${{{pop}}}

element(GalleryDataBodyArray)
    [[#{{{tid}}}]]{{{pop}}}[[/{{{tid}}}]]

element(GalleryDataBodyRow)
    {{{pop}}}

element(GalleryDataBodyFirstFieldCell)
    {{{pop}}}

element(GalleryDataBodyFieldCell)
    {{{pop}}}

element(GalleryDataFoot)
    $CRLF$

element(GalleryDataFootRow)
    {{{pop}}}

element(GalleryDataFootFirstFieldCell)
    {{{pop}}}

element(GalleryDataFootFieldCell)
    {{{pop}}}

element(GalleryImageFieldEdit_Main)
    [[[upload({{pop}},'{{field.f.filetype}}',0,'{{QryOffset}}','
    repack(Title,Button) 
    ')]]]

element(GalleryImageFieldEdit_Div)
    <div data-qqpickvalue='[[{{f_index}}]]'>{{{pop}}}</div>

element(GalleryImageFieldEdit_Script)
    inherit:Edit_Script

element(GalleryPluginCode)
    some way of making this code and the code in app.js  and in templates/widgets pluggable

element(GalleryImageFieldView_Head)
    inherit:View_Head

element(GalleryImageFieldView_Div)
    inherit:View_Div

element(GalleryImageFieldView_Script)
    inherit:View_Script

element(GalleryImageFieldView_Main)
    <div class='qiui1gallery_box'><div class='qiui1gallery_boxInner'>
    <img src='{{{field.f.url}}}[[[{{pop}}]]]' alt='[[[{{pop}}]]]' title='[[[{{pop}}]]]' 
     {{#field.f.width}}width="{{field.f.width}}"{{/field.f.width}}
     {{#field.f.height}}rows="{{field.f.height}}"{{/field.f.height}}
    />
    <div class='titleqiui1gallery_box'>[[[{{field.w.DisplayName}}]]]</div></div></div>






element(ImageFieldEdit_Main)
    [[[upload({{pop}},'{{field.f.filetype}}',0,'{{QryOffset}}','
    repack(Title,Button) 
    ')]]]

element(ImageFieldEdit_Div)
    <div data-qqpickvalue='[[{{f_index}}]]'>{{{pop}}}</div>

element(ImageFieldEdit_Script)
    inherit:Edit_Script

element(ImageFieldPluginCode)
    some way of making this code and the code in app.js  and in templates/widgets pluggable

element(ImageFieldView_Head)
    inherit:View_Head

element(ImageFieldView_Div)
    inherit:View_Div

element(ImageFieldView_Script)
    inherit:View_Script

element(ImageFieldView_Main)
    <img src='{{{field.f.url}}}[[[{{pop}}]]]' alt='[[[{{pop}}]]]' title='[[[{{pop}}]]]' 
     {{#field.f.width}}width="{{field.f.width}}"{{/field.f.width}}
     {{#field.f.height}}rows="{{field.f.height}}"{{/field.f.height}}
    />
	
	
#>